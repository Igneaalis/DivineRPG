buildscript {
    repositories {
        maven {
            name = 'forge'
            url = 'https://files.minecraftforge.net/maven'
        }
        jcenter()
        mavenCentral()
        gradlePluginPortal()
        maven {
            name = 'SpongePowered'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:5.1.74'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'maven-publish'
apply plugin: 'eclipse'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

version = '1.9.6.13'
group = 'TeamDivineRPG.divinerpg' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'DivineRPG'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.19.2'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            arg '-mixin.config=divinerpg.mixins.json'
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                divinerpg {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            arg '-mixin.config=divinerpg.mixins.json'
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                divinerpg {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            arg '-mixin.config=divinerpg.mixins.json'
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'divinerpg', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                divinerpg {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url = "https://minecraft.curseforge.com/api/maven/"}
    maven { url = "https://dvs1.progwml6.com/files/maven/"}
    maven { url = "https://modmaven.dev"}
    maven { url = "https://www.cursemaven.com"}
    maven { url 'https://maven.blamejared.com'}
    maven { url 'https://maven.theillusivec4.top/'}
    maven { url 'https://repo.spongepowered.org/repository/maven-public/'}
}
dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.2.0'
    compileOnly fg.deobf("mezz.jei:jei-1.19-common-api:11.0.0.215") //Just Enough Items
    compileOnly fg.deobf("mezz.jei:jei-1.19-forge-api:11.0.0.215") //Just Enough Items
    runtimeOnly fg.deobf("mezz.jei:jei-1.19-common:11.0.0.215") //Just Enough Items
    runtimeOnly fg.deobf("mezz.jei:jei-1.19-forge:11.0.0.215") //Just Enough Items

    compileOnly fg.deobf("net.darkhax.bookshelf:Bookshelf-Forge-1.19:14.1.7") //Bookshelf

    compileOnly fg.deobf("curse.maven:just-enough-resources-jer-240630:3951643") //Just Enough Resources
    runtimeOnly fg.deobf("curse.maven:just-enough-resources-jer-240630:3951643") //Just Enough Resources
    compileOnly fg.deobf("curse.maven:projecte-226410:3941395") //ProjectE
    runtimeOnly fg.deobf("curse.maven:projecte-226410:3941395") //ProjectE
    compileOnly fg.deobf("vazkii.patchouli:Patchouli:1.19.2-76-SNAPSHOT:api") //Patchouli
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.19.2-76-SNAPSHOT") //Patchouli
    compileOnly fg.deobf("curse.maven:enchantment-descriptions-250419:3829145") //Enchantment Descriptions
    runtimeOnly fg.deobf("curse.maven:mmmmmmmmmmmm-225738:3913301") //MmmMmmMmmMmm (Target Dummy)
//    runtimeOnly fg.deobf("curse.maven:pneumaticcraft-repressurized-281849:3969903") //PneumaticCraft
//    runtimeOnly fg.deobf("curse.maven:cyanide-forge-541676:3832812") //Cyanide
//    runtimeOnly fg.deobf("curse.maven:jade-324717:4010505") //Jade
//    runtimeOnly fg.deobf("curse.maven:sophisticated-backpacks-422301:4006090") //Sophisticated Backpacks
//    runtimeOnly fg.deobf("curse.maven:sophisticated-core-618298:4048382") //Sophisticated Core (needed for sophisticated backpacks)
    compileOnly(fg.deobf("top.theillusivec4.curios:curios-forge:1.19.2-5.1.4.3:api"))
    runtimeOnly(fg.deobf("top.theillusivec4.curios:curios-forge:1.19.2-5.1.4.3"))

//    compileOnly "mekanism:Mekanism:${mekanism_version}:api" // Mekanism API
//    runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}")// core
//    runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}:additions")// Mekanism: Additions
//    runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}:generators")// Mekanism: Generators
//    runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}:tools")// Mekanism: Tools

    if (!Boolean.getBoolean('idea.sync.active')) {
        annotationProcessor "org.spongepowered:mixin:0.8.5:processor"
    }
}

mixin {
    add sourceSets.main, 'divinerpg.refmap.json'
}

jar {
    manifest {
        attributes([
                "Specification-Title": "divinerpg",
                "Specification-Vendor": "TeamDivineRPG",
                "Specification-Version": "1.8",
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"TeamDivineRPG",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
